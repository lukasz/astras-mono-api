version: '3.8'

services:
  # PostgreSQL database for local development
  postgres:
    image: postgres:15-alpine
    container_name: astras-postgres
    environment:
      POSTGRES_DB: astras
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      # Persistent data storage
      - postgres_data:/var/lib/postgresql/data
      # Initialize database with schema and sample data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/migrations/002_sample_data.up.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    networks:
      - astras-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d astras"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # pgAdmin for database management (optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: astras-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@astras.local
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - astras-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - admin  # Only start with: docker-compose --profile admin up

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  astras-network:
    driver: bridge